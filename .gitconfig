[url "https://"]
  insteadOf = git://
[core]
  autocrlf = input
  editor = vim
  eol = lf
  pager = less
  safecrlf = false
[alias]
  ada = add -A
  ap = add --patch
  cm = commit
  cma = commit --amend
  co = checkout
  cob = checkout -b
  cobd = checkout -b develop
  cod = checkout develop
  com = checkout master
  dryflush = clean -dnfx
  feto = fetch origin
  flush = clean -dfX
  git = "!f() { git $@; }; f"
  github = "!f() { git clone https://$GITHUB_CLI_TOKEN@github.com/$1/$2; }; f"
  l1 = log --oneline
  mob = "!f() { git merge origin/`git rev-parse --abbrev-ref HEAD`; }; f"
  mod = merge origin/develop
  mom = merge origin/master
  po = pull origin
  pob = "!f() { git pull origin `git rev-parse --abbrev-ref HEAD`; }; f"
  pod = pull origin develop
  pom = pull origin master
  pu = push origin
  pub = "!f() { git push origin `git rev-parse --abbrev-ref HEAD` $@; }; f"
  puf = "!f() { git push origin `git rev-parse --abbrev-ref HEAD` --force; }; f"
  pur = "!f() { git pub; git pr; }; f"
  pushy = push origin master
  pussy = push origin develop
  puta = push --tags
  rba = rebase --abort
  rbi = rebase -i
  rbir = rebase -i --root
  rbc = rebase --continue
  rmo = remote add origin
  rmrmo = remote rm origin
  rmrmu = remote rm upstream
  rmu = remote add upstream
  rmv = remote -v
  rp = reset --patch
  rs = restore
  taga = "!f() { git tag -a $1 -m '$1' $2; }; f"
  tal = tag -l
  st = status
  sta = stash
  stam = "!f() { git stash save '$@' }; f"
  stal = stash list
  stap = stash apply
  stu = status -uno
  sw = switch
  
  pr = "!f() {\
    remote=`git rmv | grep origin | grep push | awk '{print $2}'`;\
    project=`echo $remote | awk -F/ '{ print $(NF-1) }'`;\
    repo=`echo $remote | awk -F/ '{ print $NF }' | cut -d. -f1`;\
    branch=`git rev-parse --abbrev-ref HEAD`;\
    browser=chrome;\
    case $1 in\
      github | gh) start $browser https://github.com/$project/$repo/compare/$branch...develop?expand=1;;\
      gitlab | gl) start $browser https://gitlab.com/$project/$repo/merge_requests/new?merge_request[source_branch]=$branch;;\
      bitbucket | bb) start $browser https://bitbucket.org/$project/$repo/pull-requests/new;;\
      echo) echo https://host:port/path/$project/$repo?branch=$branch;;\
      *) start $browser https://github.com/$project/$repo/compare/$branch...develop?expand=1;;\
    esac;\
  }; f"
